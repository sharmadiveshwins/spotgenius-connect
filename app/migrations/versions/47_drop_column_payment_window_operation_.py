"""47_drop_column_payment_window_operation_type_add_column_parking_operation_in_connect_parkinglot

Revision ID: e6522acd0f90
Revises: 550f71c62c22
Create Date: 2025-01-05 21:57:54.605412

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e6522acd0f90'
down_revision: Union[str, None] = '550f71c62c22'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Define the enum type
    parking_operation_enum = sa.Enum(
        'spot_based_24_hours_free_parking', 'lpr_based_24_hours_free_parking', 'paid_24_hours', 'specify_lpr_based_paid_parking_time',
        name='parkingoperations'
    )

    # Create the enum type in the database
    parking_operation_enum.create(op.get_bind())

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('connect_parkinglot', sa.Column('parking_operations', sa.Enum('spot_based_24_hours_free_parking', 'lpr_based_24_hours_free_parking', 'paid_24_hours', 'specify_lpr_based_paid_parking_time', name='parkingoperations'), nullable=False, server_default='spot_based_24_hours_free_parking'))
    op.drop_column('connect_parkinglot', 'payment_window_operation_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('connect_parkinglot', sa.Column('payment_window_operation_type', postgresql.ENUM('always_free_parking', 'always_paid_parking', 'specified_paid_timing', name='paymentwindowoperationtype'), autoincrement=False, nullable=True))
    op.drop_column('connect_parkinglot', 'parking_operations')
    # ### end Alembic commands ###
